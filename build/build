# dmd-dume
# Build in debug mode, execute unit tests and call default main().
#
# Since 2.090.0, passing -unittest executes unit tests only.
# To revert to the old behaviour (execute unit tests and call main()),
# pass --DRT-testmode=run-main without -unittest to dmd.

echo "--------------------------"
dmd --version | head -n 1
echo "Command: dmd -g -debug -w -i -unittest -cov -main --DRT-testmode=run-main -run $@"
#echo "CWD: $(pwd)"

# Capture only the time
# https://serverfault.com/a/175400/538987
exec 3>&1 4>&2
lapsed=$(TIMEFORMAT="%R"; { time nice -n 10 dmd -g -debug -w -I../src -i -unittest -cov -main --DRT-testmode=run-main -run "$@" 1>&3 2>&4; } 2>&1)
exec 3>&- 4>&-

file="$@"
base_filename=${file%.d}
echo "File: $file"
coverage=""
# if [ -e "${base_filename}.lst" ]; then
#     coverage=$(tail -n 1 "${base_filename}.lst")
#     mv "${base_filename}.lst" "tmp.backup"
# fi
if [ -e "${file}.lst" ]; then
    coverage=$(tail -n 1 "${file}.lst")
    mv "${file}.lst" "tmp.backup"
fi

rm -- -*.lst 2> /dev/null
rm _*.lst 2> /dev/null
rm *.lst 2> /dev/null

if [ -e "tmp.backup" ]; then
    mv "tmp.backup" "${file}.lst"
fi

if [ "${coverage}" != "" ]; then
    echo -e "[coverage] \e[32m${coverage}.\e[39m"
else
    echo ""
fi

echo ""
echo "Lapsed: ${lapsed}"
echo "Date:   $(date +'%T %Y-%m-%d %:z')"
